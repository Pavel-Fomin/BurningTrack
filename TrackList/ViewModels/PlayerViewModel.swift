//
//  PlayerViewModel.swift
//  TrackList
//
//  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º ‚Äî play/pause/next/seek
//
//  Created by Pavel Fomin on 28.04.2025.
//

import Foundation
import AVFoundation

final class PlayerViewModel: ObservableObject {
    @Published var currentTrack: Track?
    @Published var isPlaying: Bool = false
    @Published var currentTime: TimeInterval = 0.0
    @Published var trackDuration: TimeInterval = 0.0

    let playerManager = PlayerManager()

    func play(track: Track) {
        print("üß† PlayerViewModel: play(track:) –≤—ã–∑–≤–∞–Ω —Å", track.fileName)

        
        // MARK: - –ü—Ä–æ–≤–µ—Ä—è–µ–º ‚Äî –µ—Å–ª–∏ —Ç—Ä–µ–∫ —Ç–æ—Ç –∂–µ —Å–∞–º—ã–π, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        if currentTrack?.url == track.url {
            playerManager.playCurrent()
        } else {
            playerManager.stopAccessingCurrentTrack()
            playerManager.play(track: track)
            currentTrack = track
        }
        isPlaying = true
        trackDuration = track.duration
    }

    func togglePlayPause() {
        if isPlaying {
            playerManager.pause()
        } else {
            guard let track = currentTrack else { return }

            // –ï—Å–ª–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —Ç–æ—Ç –∂–µ —Ç—Ä–µ–∫ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
            playerManager.playCurrent()
        }
        isPlaying.toggle()
    }

    func seek(to time: TimeInterval) {
        playerManager.seek(to: time)
        self.currentTime = time
    }
}
