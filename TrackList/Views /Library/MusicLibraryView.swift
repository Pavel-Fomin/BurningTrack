//
//  MusicLibraryView.swift
//  TrackList
//
//  Created by Pavel Fomin on 22.06.2025.
//

import SwiftUI
import UniformTypeIdentifiers

struct MusicLibraryView: View {
    @StateObject private var manager = MusicLibraryManager.shared
    let playerViewModel: PlayerViewModel

    var body: some View {
        NavigationStack {
            if manager.attachedFolders.isEmpty {
                VStack {
                    Spacer()
                    Text("–ü–∞–ø–∫–∞ —Ñ–æ–Ω–æ—Ç–µ–∫–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞")
                        .foregroundStyle(.secondary)
                        .multilineTextAlignment(.center)
                        .frame(maxWidth: .infinity)
                    Spacer()
                }
            } else {
                List {
                    ForEach(manager.attachedFolders) { folder in
                        NavigationLink(destination: LibraryFolderView(folder: folder, playerViewModel: playerViewModel)) {
                            HStack(spacing: 12) {
                                Image(systemName: "folder")
                                    .foregroundColor(.blue)
                                    .frame(width: 24)
                                Text(folder.name)
                                    .lineLimit(1)
                            }
                            .padding(.vertical, 4)
                        }
                        
                        .swipeActions(edge: .trailing) {
                            Button(role: .destructive) {
                                manager.removeBookmark(for: folder.url)
                            } label: {
                                Label("–û—Ç–∫—Ä–µ–ø–∏—Ç—å", systemImage: "trash")
                            }
                        }
                    }
                }
            }
        }
        .onAppear {
            print("üì∫ MusicLibraryView: –ø–æ—è–≤–∏–ª–æ—Å—å. –¢—Ä–µ–∫–æ–≤: \(manager.tracks.count)")
        }
        .onReceive(manager.$tracks) { newTracks in
            print("üì¶ –û–±–Ω–æ–≤–∏–ª—Å—è —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–æ–≤: \(newTracks.count)")
        }
    }
}
